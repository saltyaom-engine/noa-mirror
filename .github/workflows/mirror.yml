name: mirror

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 */12 * * *'

jobs:
  mirror:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 19.3.0

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.5.1
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.5.1
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]

      - uses: tor-actions/setup-tor@main
        with:
          tor-version: '0.4.5.7'
          daemon: true
          port: 9050

      - name: load checkpoint
        run: npx degit github.com/saltyaom-engine/noa-mirror#generated data

      - name: Mirror
        uses: mujo-code/puppeteer-headful@18.9.0
        env:
          WORKER_COUNT: ${{ matrix.ci_node_total }}
          WORKER_INDEX: ${{ matrix.ci_node_index }}
          NODE_ENV: production
        with:
          args: npx ts-node src/index.ts

      - name: Push
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: generated
          FOLDER: data
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MESSAGE: mirror

      - name: Zip artifact
        run: zip -r data.zip data

      - uses: actions/upload-artifact@v2
        with:
          name: data
          path: data.zip

  # remember:
  #   name: Read from backup
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/setup-node@v2
  #     with:
  #       node-version: '16'

  #   - run: npx degit https://github.com/saltyaom-engine/hifumin-mirror#generated data

  #   - name: Zip artifact
  #     run: zip -r data.zip data

  #   - uses: actions/upload-artifact@v2
  #     with:
  #       name: artifact-1
  #       path: data.zip

  # deploy:
  #   name: Deploy Seele to deploys.app
  #   needs: [index]
  #   runs-on: ubuntu-latest
  #   env:
  #     IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/seele

  #   steps:
  #   - uses: actions/setup-node@v2
  #     with:
  #       node-version: '16'

  #   - name: Download artifact
  #     uses: actions/download-artifact@v2

  #   - run: npx degit https://github.com/saltyaom/seele seele
  #   - run: mkdir tmp && mkdir seele/ops/setup/data

  #   - run: mv artifact-*/*.zip tmp

  #   - name: unzip artifact
  #     run: unzip -o '*.zip'
  #     working-directory: ./tmp

  #   - run: mv data/searchable*.json ../seele/ops/setup/data
  #     working-directory: ./tmp

  #   - run: mv tmp/data seele/data

  #   - run: rm .gitignore && pwd && ls
  #     working-directory: ./seele

  #   - name: Push
  #     uses: s0/git-publish-subdir-action@develop
  #     env:
  #       REPO: self
  #       FOLDER: seele
  #       BRANCH: seele
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       MESSAGE: "Seele"

  #   - name: Login to GitHub Container Registry
  #     uses: docker/login-action@v1
  #     with:
  #       registry: ghcr.io
  #       username: ${{ github.repository_owner }}
  #       password: ${{ secrets.GITHUB_TOKEN }}

  #   - name: Build Docker image
  #     run: docker build -t seele .
  #     working-directory: ./seele

  #   - name: Tag Docker image
  #     run: docker tag seele $IMAGE_NAME

  #   - name: Push Docker image
  #     run: docker push $IMAGE_NAME

  #   - uses: deploys-app/deploys-action@v1
  #     with:
  #       project: hifumin
  #       location: gke.cluster-rcf2
  #       name: seele
  #       image: ghcr.io/${{ github.repository_owner }}/seele
  #       minReplicas: 2
  #       maxReplicas: 10
  #     env:
  #       DEPLOYS_AUTH_USER: ${{ secrets.DEPLOYS_AUTH_USER }}
  #       DEPLOYS_AUTH_PASS: ${{ secrets.DEPLOYS_AUTH_PASS }}
